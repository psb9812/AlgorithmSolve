/*
백준 2225번
	합 분해

풀이: 편의점 알바하다가 점화식을 찾았다.
6,4의 합 분해 수를 구하고 싶으면 다음과 같은 규칙을 가진다.
0 + (6, 3)
1 + (5, 3)
2 + (4, 3)
3 + (3, 3)
4 + (2, 3)
5 + (1, 3)
6 + (0, 3)
즉, k-1일 때의 모든 n = 0부터 N까지의 경우를 더하면 된다.

이전의 값이 현재의 값을 구할 때 필요하다는 점을 보아하니 DP로 풀 수 있다.

이 점화식만 찾으면 문제는 쉽게 풀린다.
	
*/

#include <iostream>
using namespace std;
using ll = long long;
int N; int K;
ll D[201][201];
int mol = 1000000000;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	//입력 받기
	cin >> N >> K;

	//D[i, k] : 0부터 i까지의 수로 k번 더해서 i를 만들 수 있는 수열의 개수
	
	//초기값 세팅
	//1번으로 i를 만들 수 있는 경우는 1이므로 k가 1인 경우 전부 1로 세팅
	for (int i = 0; i <= N; i++)
	{
		D[i][1] = 1;
	}
	//n이 0일 때도 k가 몇이든 상관 없이 1이므로 1로 세팅한다.
	for (int i = 0; i <= K; i++)
	{
		D[0][i] = 1;
	}

	//점화식으로 원하는 값 찾기
	for (int k = 2; k <= K; k++)
	{
		for (int n = 1; n <= N; n++)
		{
			for (int p = 0; p <= n; p++)
			{
				D[n][k] += D[p][k - 1];
				D[n][k] %= mol;
			}
		}
	}

	//결과 출력
	cout << D[N][K];
}